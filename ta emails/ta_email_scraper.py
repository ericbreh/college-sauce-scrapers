import csv
from datetime import datetime
from playwright.sync_api import sync_playwright

url = 'https://www.ucsb.edu/directory'
quarter = 'SPRING 2024'

# Get the start time
start_time = datetime.now()

with sync_playwright() as p:
    browser = p.chromium.launch()
    page = browser.new_page()
    page.goto(url)

    # Read the data from the CSV file generated by the first script
    with open(f'{quarter} ta names.csv', 'r') as file:
        reader = csv.DictReader(file)
        ta_data = list(reader)

    for ta in ta_data:
        name = ta['ta_name']
        name_parts = name.split(' ')
        last_name = name_parts[0].lower()

        if len(name_parts) > 1:
            first_initial = name_parts[1][0].lower()
        else:
            first_initial = ''

        name_input = page.wait_for_selector("#edit-name", state="visible")
        name_input.fill(last_name)

        # Click the "Submit" button
        submit_button = page.wait_for_selector("#edit-submit", state="visible")
        submit_button.click()

        # Wait for the results page to load
        page.wait_for_url("**/directory**")

        # Extract the email addresses from the table
        for row in page.query_selector_all("tr"):
            name_element = row.query_selector(".name")
            email_link = row.query_selector("a[href^='mailto:']")

            if name_element and email_link:
                row_name = name_element.inner_text()
                row_name_parts = row_name.split(', ')
                row_last_name = row_name_parts[0].lower()

                if len(row_name_parts) > 1:
                    row_first_initial = row_name_parts[1][0].lower()
                else:
                    row_first_initial = ''

                if row_last_name == last_name and (row_first_initial == first_initial or not first_initial):
                    email_address = email_link.get_attribute("href").split(":")[1]
                    ta['email'] = email_address
                    print(f"Name: {row_name}")
                    print(f"Email: {email_address}")
                    print("---")
                    break

    browser.close()

# Save the course data (including email addresses) to the same CSV file
with open(f'{quarter} ta emails.csv', 'w', newline='', encoding='utf-8') as csvfile:
    fieldnames = ['course_id', 'title', 'ta_name', 'email']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
    writer.writeheader()
    writer.writerows(ta_data)

end_time = datetime.now()
print(f"Script runtime: {end_time - start_time}")